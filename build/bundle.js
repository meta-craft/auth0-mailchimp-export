module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=7)}([function(e,t){e.exports=require("q")},function(e,t){e.exports=require("mailchimp")},function(e,t){e.exports=require("async")},function(e,t,r){"use strict";e.exports=function(e,t){var r=e.MAILCHIMP_LIST_NAME;return function(e,n){t.lists_list({filters:{list_name:r}},function(t,r){if(t)return console.error(t),n(t);var o=r.data[0],i=o.id,s=o.name;return console.log("AME: MailChimp list ID/name: "+i+" / "+s),n(null,{mailChimpList:o,users:e})})}}},function(e,t){e.exports=require("request")},function(e,t){e.exports=require("ramda")},function(e,t){e.exports=require("moment")},function(e,t,r){var n=r(8);e.exports=n.fromExpress(r(9))},function(e,t){e.exports=require("webtask-tools")},function(e,t,r){var n=r(10)(),o=r(11),i=r(12),s=r(13),a=r(16),u=r(19);function c(e,t){var r=e.webtaskContext,n=["AUTH0_DOMAIN","AUTH0_CLIENT_ID","AUTH0_CLIENT_SECRET","MAILCHIMP_API_KEY","MAILCHIMP_LIST_NAME"].filter(function(e){return!r.data[e]});if(n.length)return t.status(400).send({message:"Missing settings: "+n.join(", ")});var o={TENANT_DOMAIN:e.webtaskContext.data.AUTH0_DOMAIN,USER_SEARCH_MGMT_TOKEN:e.access_token,MAILCHIMP_API_KEY:r.data.MAILCHIMP_API_KEY,MAILCHIMP_LIST_NAME:r.data.MAILCHIMP_LIST_NAME,UPDATE_DAYS:r.data.UPDATE_DAYS};console.log("AME: Begin synchronization"),function(e,t){s(e).then(function(){return t()},function(e){return t(e)})}(o,function(e){if(e)return t.sendStatus(500).send("Error - please see logs for details");console.log("AME: Requesting removal of protected email addresses"),function(e,t){a(e).then(function(){return t()},function(e){return t(e)})}(o,function(r){return e?t.sendStatus(500).send("Error - please see logs for details"):(console.log("AME: Synchronization complete"),t.status(200).send("All done!"))})})}var l=o({load:function(e,t,r,n,o){i.post(e).send({audience:t,grant_type:"client_credentials",client_id:r,client_secret:n}).type("application/json").end(function(e,t){e||!t.ok?o(null,e):o(t.body.access_token)})},hash:function(e){return e},max:100,maxAge:36e5});n.use(function(e,t,r){if("/meta"===e.path)return r();var n="https://"+e.webtaskContext.data.AUTH0_DOMAIN+"/oauth/token",o="https://"+e.webtaskContext.data.AUTH0_DOMAIN+"/api/v2/",i=e.webtaskContext.data.AUTH0_CLIENT_ID,s=e.webtaskContext.data.AUTH0_CLIENT_SECRET;l(n,o,i,s,function(t,n){if(n)return console.error("Error getting access_token",n),r(n);e.access_token=t,r()})}),n.get("/",c),n.post("/",c),n.get("/meta",function(e,t){t.status(200).send(u)}),e.exports=n},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("lru-memoizer")},function(e,t){e.exports=require("superagent")},function(e,t,r){"use strict";var n=r(1).MailChimpAPI,o=r(2),i=r(0);e.exports=function(e){var t=e.MAILCHIMP_API_KEY;try{console.log("AME: Attempting to connect to MailChimp API");var s=new n(t,{version:"2.0"})}catch(e){return console.log(e.message)}console.log("AME: Mailchimp API created");var a=r(3)(e,s),u=r(14)(e),c=r(15)(e,s),l=i.defer();return console.log("AME: Preparing user retrieval and synchronization"),o.waterfall([u,a,c],function(e){return e?(console.error(e),l.reject(new Error(e))):l.resolve()}),l.promise}},function(e,t,r){"use strict";var n=r(4),o=r(5),i=r(0),s=r(6),a=function(e,t,r,u){var c=e.TENANT_DOMAIN,l=e.USER_SEARCH_MGMT_TOKEN,f="*"!==e.UPDATE_DAYS?s().subtract(e.UPDATE_DAYS,"days").format("YYYY-MM-DD"):"*",d=i.defer(),p="email_verified:true AND _exists_:email AND -user_metadata.exclude_from_mailchimp_synchronization:[* TO *] AND updated_at:["+f+" TO *]";return n({method:"GET",url:"https://"+c+"/api/v2/users",qs:{q:p,search_engine:"v3",per_page:r,page:u,sort:"updated_at:-1",fields:"email,name",include_fields:"true"},headers:{"cache-control":"no-cache",authorization:"Bearer "+l}},function(n,i,s){if(n)return d.reject(new Error(n));var c=JSON.parse(s);return c.length>0?(c.forEach(e=>{const t=e.name;if(!(t&&t.length>0))return e;delete e.name,e.given_name=t.split(" ").splice(0,1)[0],e.family_name=t.split(" ").splice(1).join(" ")}),t=o.concat(t,c),console.log('AME: Executing query: "'+p+'"; retrieved '+t.length+" users"),d.resolve(a(e,t,r,u+1))):(console.log("AME: User retrieval complete"),d.resolve(t))}),d.promise};e.exports=function(e){return function(t){console.log("AME: Attempting to retrieve Auth0 users"),a(e,[],100,0).then(function(e){var r=e.length;return console.log("AME: Total number of Auth0 users: "+r),t(null,e)},function(e){console.error("ERROR: "+e),t(e)})}}},function(e,t,r){"use strict";e.exports=function(e,t){return function(e,r){var n=e.mailChimpList.id,o=e.users;console.log("AME: "+o.length+" users retrieved from Auth0");var i=o.filter(function(e){return!e.email.includes("+")}).map(function(e){return{email:{email:e.email},email_type:"text",merge_vars:{FNAME:e.given_name||"",LNAME:e.family_name||""}}});console.log("AME: "+i.length+" valid email address users to synchronize with Mailchimp");var s={id:n,batch:[],double_optin:!1,update_existing:!0,replace_interests:!0},a=i.length,u=0,c=1,l=parseInt(i.length/2e3,10)+1;console.log("AME: Beginning Mailchimp synchronization ("+l+" total calls required)");var f=function(n){s.batch=i.splice(n,2e3),console.log("AME: Synchronizing with Mailchimp, please wait ("+c+"/"+l+") ..."),t.lists_batch_subscribe(s,function(t,n){return t?(console.error("AME: "+t),r(t)):(u+=2e3,console.log("AME: Mailchimp batch list update completed successfully; processed "+(u<a?u:a)+"/"+a+" records"),n.error_count>0&&console.log("AME: "+n.error_count+" error(s) encountered from Mailchimp:"+JSON.stringify(n.errors)),c++,u<a?void f(u):r(null,e))})};f(0)}}},function(e,t,r){"use strict";var n=r(1).MailChimpAPI,o=r(2),i=r(0);e.exports=function(e){var t=e.MAILCHIMP_API_KEY;try{console.log("AME: Attempting to connect to MailChimp API");var s=new n(t,{version:"2.0"})}catch(e){return console.log(e.message)}console.log("AME: Mailchimp API created");var a=r(3)(e,s),u=r(17)(e),c=r(18)(e,s),l=i.defer();return console.log("AME: Preparing user retrieval and synchronization"),o.waterfall([u,a,c],function(e){return e?(console.error(e),l.reject(new Error(e))):l.resolve()}),l.promise}},function(e,t,r){"use strict";var n=r(4),o=r(5),i=r(0),s=r(6),a=function(e,t,r,u){var c=e.TENANT_DOMAIN,l=e.USER_SEARCH_MGMT_TOKEN,f="*"!==e.UPDATE_DAYS?s().subtract(e.UPDATE_DAYS,"days").format("YYYY-MM-DD"):"*",d=i.defer(),p="email_verified:true AND _exists_:email AND email_verified:true AND _exists_:email AND user_metadata.exclude_from_mailchimp_synchronization:[* TO *] AND updated_at:["+f+" TO *]";return n({method:"GET",url:"https://"+c+"/api/v2/users",qs:{q:p,search_engine:"v2",per_page:r,page:u,sort:"updated_at:-1",fields:"email",include_fields:"true"},headers:{"cache-control":"no-cache",authorization:"Bearer "+l}},function(n,i,s){if(n)return d.reject(new Error(n));var c=JSON.parse(s);return c.length>0?(t=o.concat(t,c),console.log('AME: Executing query: "'+p+'"; retrieved '+t.length+" users"),d.resolve(a(e,t,r,u+1))):(console.log("AME: User retrieval complete"),d.resolve(t))}),d.promise};e.exports=function(e){return function(t){console.log("AME: Attempting to retrieve Auth0 users"),a(e,[],100,0).then(function(e){var r=e.length;return console.log("AME: Total number of Auth0 users: "+r),t(null,e)},function(e){console.error("ERROR: "+e),t(e)})}}},function(e,t,r){"use strict";e.exports=function(e,t){return function(e,r){var n=e.mailChimpList.id,o=e.users;console.log("AME: "+o.length+" users retrieved from Auth0 for removal");var i=o.filter(function(e){return!e.email.includes("+")}).map(function(e){return{email:e.email}});console.log("AME: "+i.length+" valid email address users to remove from Mailchimp");var s={id:n,batch:[],delete_member:!1,send_goodbye:!1,send_notify:!1},a=i.length,u=0,c=1,l=parseInt(i.length/2e3,10)+1;console.log("AME: Beginning Mailchimp synchronization ("+l+" total calls required)");var f=function(n){s.batch=i.splice(n,2e3),console.log("AME: Synchronizing with Mailchimp, please wait ("+c+"/"+l+") ..."),t.lists_batch_unsubscribe(s,function(t,n){return t?(console.error("AME: "+t),r(t)):(u+=2e3,console.log("AME: Mailchimp batch list removal completed successfully; processed "+(u<a?u:a)+"/"+a+" records"),n.error_count>0&&console.log("AME: "+n.error_count+" error(s) encountered from Mailchimp:"+JSON.stringify(n.errors)),c++,u<a?void f(u):r(null,e))})};f(0)}}},function(e){e.exports=JSON.parse('{"codeUrl":"https://github.com/meta-craft/auth0-mailchimp-export","title":"Auth0 MailChimp Export","name":"auth0-mailchimp-export","version":"1.5.0","author":"Auth0 / CauseLabs / Meta Craft","description":"Allows Auth0 accounts to synchronize their Auth0 user base (e.g., those that have an email address and are verified) with a MailChimp list","type":"cron","repository":"https://github.com/meta-craft/auth0-mailchimp-export","keywords":["auth0","mailchimp","user profile"],"schedule":"0 */5 * * * *","secrets":{"AUTH0_DOMAIN":{"description":"The Auth0 domain to authorize.","required":true},"AUTH0_CLIENT_ID":{"description":"The Auth0 client ID to authorize.","required":true},"AUTH0_CLIENT_SECRET":{"description":"The Auth0 client secret associated with the client ID above.","required":true},"MAILCHIMP_API_KEY":{"description":"The MailChimp API key associated with your MailChimp user account, e.g. f1b0602xy124d85d8444a5d4e5eed-us14","required":true},"MAILCHIMP_LIST_NAME":{"description":"The name of the MailChimp list to which you wish to export Auth0 user profiles, e.g. Auth0-DBConn1","required":true},"UPDATE_DAYS":{"description":"The number of days back from job instantiation date to retrieve users (default: 1). Use * for all records (but note that this will timeout if executed on Auth0; see README.md for more information).","required":true,"default":1}}}')}]);
